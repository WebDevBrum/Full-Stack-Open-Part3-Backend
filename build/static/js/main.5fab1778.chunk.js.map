{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","submit","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","Persons","filteredPersons","persons","handleDelete","length","map","person","index","name","number","onClick","id","baseUrl","newObject","axios","post","then","response","data","put","delete","App","useState","setPersons","setFilteredPersons","setNewName","setNewNumber","newFilter","setNewFilter","notificationMessage","setNotificationMessage","notificationClass","setNotificationClass","useEffect","console","log","get","Notification","message","className","class","event","target","filter","toLowerCase","includes","preventDefault","window","confirm","existingPerson","find","n","changedPerson","phoneService","returnedPerson","setTimeout","catch","error","nameObject","concat","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5fab1778.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({value, onChange}) => {\n  return (\n    <div>\n        Filter names: <input value={value} onChange={onChange}/>\n      </div>\n  )\n}\n\nexport default Filter;","import React from 'react'\n\nconst PersonForm = ({submit, newName, handleNewName, newNumber, handleNewNumber}) => {\n  return (\n    <form onSubmit={submit}>\n        <div>\n          name: <input value={newName} onChange={handleNewName}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form>\n  )\n}\n\nexport default PersonForm;","import React from 'react'\n\nconst Persons = ({filteredPersons, persons, handleDelete}) => {\n  return (\n    <div>\n      {\n      filteredPersons.length > 0 \n      ? \n      filteredPersons.map((person, index) => \n        <div key={index}>\n          <p >{person.name}: {person.number}</p>\n          <button onClick={() => handleDelete(person.id)}>DELETE</button>\n        </div>\n        )\n        :\n      persons.map((person, index) => \n        <div key={index}>\n          <p >{person.name}: {person.number}</p>\n          <button onClick={() => handleDelete(person.id, person)}>DELETE</button>\n        </div>\n        )} \n    </div>\n    \n  )\n}\n\nexport default Persons;","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id, newObject) => {\n  const request = axios.delete(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport axios from 'axios'\nimport phoneService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationClass, setNotificationClass] = useState()\n\n\n  useEffect(() => {\n    console.log('effect hello')\n    axios\n      .get('/api/persons')\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n  console.log('there are', persons.length, 'persons')\n  console.log(persons);\n\n  const addNewPerson = (event) => {\n    event.preventDefault();\n    \n    //Filter returns an array based on tetscondition, so if this array is longer than 0 the name exists.\n    //Update existing number if person exists\n    if(persons.filter(person => person.name.toLowerCase() === newName.toLowerCase()).length > 0) {\n      window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      \n      let existingPerson = persons.find(n => n.name === newName.toLowerCase())\n      let changedPerson =  { ...existingPerson, number: newNumber }\n      \n      //setPersons uses existing state and only modifies the item changed on the server using the response from the server put request.\n    phoneService\n    .update(existingPerson.id, changedPerson)\n    .then(returnedPerson => {\n      setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n\n      setNotificationClass('added');\n      setNotificationMessage(\n        `${existingPerson.name} was updated on the server`\n      )\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    })\n    .catch(error => {\n      setNotificationClass('error');\n      setNotificationMessage(\n        `${existingPerson.name} was already removed from the server`\n      )\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n      setPersons(persons.filter(n => n.id !== existingPerson.id))\n    })\n    } else {\n      //Add a new person\n      const nameObject = {\n        name: newName,\n        number: newNumber}\n      // setPersons(persons.concat(nameObject))\n      \n      \n      phoneService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        }).catch(error => {\n          setNotificationClass('error');\n          setNotificationMessage(JSON.stringify(error.response.data.error));\n        })\n        setNotificationClass('added');\n        setNotificationMessage(\n          `${nameObject.name} was added to the server`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n        \n    }\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilter = (event) => {\n   const value = (event.target.value);\n   setNewFilter(value);\n   \n   if(value === '') {\n     setFilteredPersons([]) \n   } else {  \n      let filter = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()));\n      setFilteredPersons(filter);  \n   }\n  }\n\n  const handleDelete = (id, person) => {\n    \n    window.confirm(`Delete ${person.name}?`)\n    \n    phoneService\n      .remove(id)\n      .then(\n        setPersons(persons.filter(n => n.id !== id))\n      ).catch(error => {\n        setNotificationClass('error');\n        setNotificationMessage(\n          `${person.name} was already removed from the server`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n              setPersons(persons.filter(n => n.id !== id))\n            })\n  }\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n\n  \n    return (\n      <div className={notificationClass}>\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} class={notificationClass} />\n      <Filter value={newFilter} onChange={handleFilter}/>\n      <h3>Add a New</h3>\n      <PersonForm \n        submit={addNewPerson} \n        newName={newName} \n        handleNewName={handleNewName} \n        newNumber={newNumber} \n        handleNewNumber={handleNewNumber} />\n      <h2>Numbers</h2>\n      <Persons \n        filteredPersons={filteredPersons}\n        persons={persons} \n        handleDelete={handleDelete}\n        />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}